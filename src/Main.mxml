<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   creationComplete="init()"
			   width="1000"
			   height="600"
			   xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[			
			import mx.collections.ArrayCollection;
			import mx.events.DragEvent;
			
			import scripts.Element;
			import scripts.MyUtils;
			import scripts.MyVector;
			import scripts.OrbitalSimulator;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			public var sim:OrbitalSimulator;
			
			public function init():void 
			{
				trace("Initializing");
				
				sim = new OrbitalSimulator(mainStage);
				sim.start();
				
				objListDropDown.selectedIndex = 0;
			}
			public function objListChange(event:IndexChangeEvent):void
			{
				sim.currentElement = sim.objects.getItemAt(event.newIndex) as Element;
			}
			
			public function setSimulationSpeed(event:Event):void
			{
				sim.simulationSpeed = Math.pow(10, event.target.value); 
			}
			
			public function simSpeedDataTip(val:String):String
			{
				var scaleAmount:Number = Math.pow(10, Number(val));
				return "Speed x" + String(MyUtils.roundTo(scaleAmount, 2));
			}
			
			public function changeSpeedByStep(increase:Boolean=true, steps:int=1):void
			{
				var dir:int = increase ? 1 : -1;
				speedSlider.value += speedSlider.stepSize * dir * steps;
				speedSlider.dispatchEvent(new Event(Event.CHANGE));
			}
		]]>
	</fx:Script>
	<s:HGroup>
		<s:VGroup>
			<s:Group width="600" height="550" id="mainStage">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0x101010"/>
					</s:fill>
				</s:Rect>
			</s:Group>
			<s:HGroup>
				<s:Button label="Play" click="sim.start()"/>
				<s:Button label="Pause" click="sim.stop()"/>
				<s:Button label="Stop" click="sim.stop(), sim.resetTime()"/>
				<s:Label text="Time Elapsed: {sim.outputObject.time}" />
			</s:HGroup>
			<s:HGroup>
				<s:Button label="Slower" click="changeSpeedByStep(false, 5)"/>
				<s:Button label="Faster" click="changeSpeedByStep(true, 5)"/>
				<s:Button label="Reverse" click="sim.reverseTime()"/>
				<s:Label text="Sim Speed: {sim.outputObject.speed}" />
			</s:HGroup>
		</s:VGroup>
		<mx:TabNavigator width="400" height="600" creationPolicy="all">
			<s:NavigatorContent label="Objects">
				<s:layout>
					<s:VerticalLayout paddingTop="10"/>
				</s:layout>
				<s:DropDownList id="objListDropDown" dataProvider="{sim.objects}" labelField="id" change="objListChange(event)"></s:DropDownList>
				<s:DataGrid dataProvider="{sim.outputObject.elementVectors}" id="vectorTable" width="100%" editable="true"
							requestedRowCount="3">
					<s:columns>
						<s:ArrayList>
							<s:GridColumn dataField="name" headerText=""></s:GridColumn>
							<s:GridColumn dataField="0" headerText="x"></s:GridColumn>
							<s:GridColumn dataField="1" headerText="y"></s:GridColumn>
							<s:GridColumn dataField="2" headerText="z"></s:GridColumn>
							<s:GridColumn dataField="3" headerText="w"></s:GridColumn>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:NavigatorContent>
			<s:NavigatorContent label="Simulation Options">
				<s:layout>
					<s:VerticalLayout paddingTop="10"/>
				</s:layout>
				<s:Label width="100%" text="Simulation Speed"/>
				<s:HSlider
					id="speedSlider" focusEnabled="false"
					minimum="-2" maximum="2" value="0"
					snapInterval="0.01" stepSize="0.05"
					dataTipFormatFunction="simSpeedDataTip"
					width="250" height="30"
					change="setSimulationSpeed(event)"/>
			</s:NavigatorContent>
		</mx:TabNavigator>
		
	</s:HGroup>
</s:Application>
